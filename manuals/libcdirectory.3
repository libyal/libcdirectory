.Dd October 18, 2014
.Dt libcdirectory 3
.Os libcdirectory
.Sh NAME
.Nm libcdirectory.h
.Nd Library to support cross-platform C directory functions
.Sh LIBRARY
.Lb libcdirectory
.Sh SYNOPSIS
.In libcdirectory.h
.Pp
Support functions
.Ft const char *
.Fn libcdirectory_get_version "void"
.Pp
Error functions
.Ft void
.Fn libcdirectory_error_free "libcdirectory_error_t **error"
.Ft int
.Fn libcdirectory_error_fprint "libcdirectory_error_t *error, FILE *stream"
.Ft int
.Fn libcdirectory_error_sprint "libcdirectory_error_t *error, char *string, size_t size"
.Ft int
.Fn libcdirectory_error_backtrace_fprint "libcdirectory_error_t *error, FILE *stream"
.Ft int
.Fn libcdirectory_error_backtrace_sprint "libcdirectory_error_t *error, char *string, size_t size"
.Pp
Directory functions
.Ft int
.Fn libcdirectory_directory_initialize "libcdirectory_directory_t **directory, libcdirectory_error_t **error"
.Ft int
.Fn libcdirectory_directory_free "libcdirectory_directory_t **directory, libcdirectory_error_t **error"
.Ft int
.Fn libcdirectory_directory_open "libcdirectory_directory_t *directory, const char *directory_name, libcdirectory_error_t **error"
.Ft int
.Fn libcdirectory_directory_close "libcdirectory_directory_t *directory, libcdirectory_error_t **error"
.Ft int
.Fn libcdirectory_directory_read_entry "libcdirectory_directory_t *directory, libcdirectory_directory_entry_t *directory_entry, libcdirectory_error_t **error"
.Ft int
.Fn libcdirectory_directory_has_entry "libcdirectory_directory_t *directory, libcdirectory_directory_entry_t *directory_entry, const char *entry_name, size_t entry_name_length, uint8_t entry_type, uint8_t compare_flags, libcdirectory_error_t **error"
.Pp
Available when compiled with libbfio support:
.Ft int
.Fn libcdirectory_directory_open_wide "libcdirectory_directory_t *directory, const wchar_t *directory_name, libcdirectory_error_t **error"
.Ft int
.Fn libcdirectory_directory_has_entry_wide "libcdirectory_directory_t *directory, libcdirectory_directory_entry_t *directory_entry, const wchar_t *entry_name, size_t entry_name_length, uint8_t entry_type, uint8_t compare_flags, libcdirectory_error_t **error"
.Pp
Directory entry functions
.Ft int
.Fn libcdirectory_directory_entry_initialize "libcdirectory_directory_entry_t **directory_entry, libcdirectory_error_t **error"
.Ft int
.Fn libcdirectory_directory_entry_free "libcdirectory_directory_entry_t **directory_entry, libcdirectory_error_t **error"
.Ft int
.Fn libcdirectory_directory_entry_get_type "libcdirectory_directory_entry_t *directory_entry, uint8_t *type, libcdirectory_error_t **error"
.Ft int
.Fn libcdirectory_directory_entry_get_name "libcdirectory_directory_entry_t *directory_entry, char **name, libcdirectory_error_t **error"
.Pp
Available when compiled with libbfio support:
.Ft int
.Fn libcdirectory_directory_entry_get_name_wide "libcdirectory_directory_entry_t *directory_entry, wchar_t **name, libcdirectory_error_t **error"
.Sh DESCRIPTION
The
.Fn libcdirectory_get_version
function is used to retrieve the library version.
.Sh RETURN VALUES
Most of the functions return NULL or -1 on error, dependent on the return type. For the actual return values refer to libcdirectory.h
.Sh ENVIRONMENT
None
.Sh FILES
None
.Sh BUGS
Please report bugs of any kind to <joachim.metz@gmail.com> or on the project website:
https://github.com/libyal/libcdirectory/
.Sh AUTHOR
These man pages were written by Joachim Metz.
.Sh COPYRIGHT
Copyright 2008-2014, Joachim Metz <joachim.metz@gmail.com>.
This is free software; see the source for copying conditions. There is NO warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
.Sh SEE ALSO
the libcdirectory.h include file
